{"version":3,"sources":["redux/selectors/index.js","api/urls.js","api/ApiMethods.js","redux/actions/index.js","components/common/Spinner.js","components/common/message/message.js","components/common/Button.js","components/pages/character/Status.js","components/pages/character/CharacterCard.js","components/pages/character/CharacterDetail.js","components/pages/character/Numbers.js","components/pages/character/Pagination.js","components/pages/character/Charaters.js","components/common/Input.js","components/common/serchBar/SearchBar.js","components/home/Header.js","components/home/MainLayout.js","components/home/Home.js"],"names":["getCharactersSelector","state","characters","getCharactersNumberSelector","charactersNumber","getLocationsSelector","locations","getEpisodesSelector","episodes","getLoadingState","isLoading","backendExpress","queryString","require","getCharacters","query","abortController","a","fetch","stringify","signal","method","credentials","headers","response","ok","status","json","message","console","error","data","name","getQuery","search","page","fetchCharacters","createAction","FETCH_CHARACTERS","fetchCharactersNumber","FETCH_CHARACTERS_NUMBER","fetchLocations","FETCH_LOCATIONS","getLocations","fetchEpisode","FETCH_EPISODES","getEpisodes","loading","LOADING","StyledSpinner","styled","div","props","size","Spinner","Message","show","text","className","defaultProps","Button","type","alt","content","onClick","Status","CharacterCard","character","setCharacter","image","species","selectedCharacter","useCallback","e","preventDefault","src","ProductDetail","origin","location","episode","gender","Object","keys","length","Numbers","locationsNumber","episodesNumber","useState","setIsloading","useMemo","window","AbortController","useEffect","Promise","all","load","getCount","info","count","charactersNumbe","connect","memo","Pagination","pagination","setPage","isNext","pages","Charaters","searchQuery","URLSearchParams","get","results","characterList","setCharacterList","setMessage","setPagination","map","item","index","key","Input","reference","defaultValue","placeholder","ref","withRouter","searchInput","useRef","searchInputValue","setSearchInputValue","searchParam","handleSearchSubmit","target","children","history","push","pathname","value","current","focus","onSubmit","Header","MainLayout","exact","path","component","Characters"],"mappings":"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","file":"static/js/4.2f9c5e0b.chunk.js","sourcesContent":["export const getCharactersSelector               = state => state.characters\nexport const getCharactersNumberSelector               = state => state.charactersNumber\nexport const getLocationsSelector                = state => state.locations\nexport const getEpisodesSelector                = state => state.episodes\nexport const getLoadingState                = state => state.isLoading\n","export const backendExpress = 'https://rickandmortyapi.com/api';\n\nexport const character   = '/character';\nexport const location   = '/location';\nexport const episode   = '/episode';\n\n\n","import { backendExpress, character, location, episode } from \"./urls\";\n\nconst queryString = require('query-string');\n\n\n\nexport const getCharacters = (query, abortController) => async () => {\n    try {\n      \n      const response = await fetch(\n        `${backendExpress}${character}${query? `?${queryString.stringify(query)}` : ''}`,\n        {\n          signal: abortController.signal,\n          method: 'GET',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      )\n      const { ok, status } = response\n      if (!ok) {\n        const message = await response.json()\n        console.error(message);\n        switch (status) {\n          case 404:\n            return { message: \"No encontramos personajes.\" };\n          default:\n            return { message: \"Algo salió mal, inténtelo de nuevo.\" };\n        }\n      }\n      const data = await response.json()\n      return data\n    } catch (err) {\n      if (err.name !== 'AbortError') {\n        throw err\n      }\n    }\n};\n\n\n\nexport const getLocations= (query, abortController) => async () => {\n  try {\n    \n    const response = await fetch(\n      `${backendExpress}${location}${query? `?${queryString.stringify(query)}` : ''}`,\n      {\n        signal: abortController.signal,\n        method: 'GET',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    )\n    const { ok, status } = response\n    if (!ok) {\n      const message = await response.json()\n      console.error(message);\n      switch (status) {\n        case 404:\n          return { message: \"No encontramos locations.\" };\n        default:\n          return { message: \"Algo salió mal, inténtelo de nuevo.\" };\n      }\n    }\n    const data = await response.json()\n    return data\n  } catch (err) {\n    if (err.name !== 'AbortError') {\n      throw err\n    }\n  }\n};\n\n\n\nexport const getEpisodes = (query, abortController) => async () => {\n  try {\n    \n    const response = await fetch(\n      `${backendExpress}${episode}${query? `?${queryString.stringify(query)}` : ''}`,\n      {\n        signal: abortController.signal,\n        method: 'GET',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    )\n    const { ok, status } = response\n    if (!ok) {\n      const message = await response.json()\n      console.error(message);\n      switch (status) {\n        case 404:\n          return { message: \"No encontramos episodios.\" };\n        default:\n          return { message: \"Algo salió mal, inténtelo de nuevo.\" };\n      }\n    }\n    const data = await response.json()\n    return data\n  } catch (err) {\n    if (err.name !== 'AbortError') {\n      throw err\n    }\n  }\n};\n","import {\n  FETCH_CHARACTERS,\n  LOADING,\n  FETCH_LOCATIONS,\n  FETCH_EPISODES,\n  FETCH_CHARACTERS_NUMBER,\n} from \"../../constants\";\nimport { createAction } from \"redux-actions\";\nimport { getCharacters, getEpisodes, getLocations } from \"../../api/ApiMethods\";\n\nconst getQuery = (search, page) => {\n  const query = {\n    name: search,\n    page\n  };\n\n  if(!search) {\n    delete query.search\n  }\n\n  return query;\n};\n\nexport const fetchCharacters = createAction(\n  FETCH_CHARACTERS,\n  (search, abortController, page = 1) => getCharacters(getQuery(search, page), abortController)()\n);\n\nexport const fetchCharactersNumber = createAction(\n  FETCH_CHARACTERS_NUMBER,\n  (search, abortController) => getCharacters(getQuery(search), abortController)()\n);\n\nexport const fetchLocations = createAction(\n  FETCH_LOCATIONS,\n  (search, abortController) => getLocations(getQuery(search), abortController)()\n);\n\nexport const fetchEpisode = createAction(\n  FETCH_EPISODES,\n  (search, abortController) => getEpisodes(getQuery(search), abortController)()\n);\n\nexport const loading = createAction(LOADING, (isLoading) => isLoading);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledSpinner = styled.div`\n  margin: auto;\n\n  width: ${(props) => `${props.size}px`};\n  height: ${(props) => `${props.size}px`};\n  margin: auto;\n  background-color: #333;\n\n  border-radius: 100%;\n  -webkit-animation: sk-scaleout 1s infinite ease-in-out;\n  animation: sk-scaleout 1s infinite ease-in-out;\n\n  @-webkit-keyframes sk-scaleout {\n    0% {\n      -webkit-transform: scale(0);\n    }\n    100% {\n      -webkit-transform: scale(1);\n      opacity: 0;\n    }\n  }\n\n  @keyframes sk-scaleout {\n    0% {\n      -webkit-transform: scale(0);\n      transform: scale(0);\n    }\n    100% {\n      -webkit-transform: scale(1);\n      transform: scale(1);\n      opacity: 0;\n    }\n  }\n`;\n\nconst Spinner = ({ size }) => {\n  return <StyledSpinner size={size} />;\n};\n\nSpinner.propTypes = {\n  size: PropTypes.number.isRequired,\n};\nexport default Spinner;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nimport \"./style/message.scss\";\nimport Spinner from \"../Spinner\";\n\nconst Message = ({ show, text}) => (\n  <div className={`conatainerMessage`}>\n    {show ? text : <Spinner size={100} />}\n  </div>\n);\n\nMessage.propTypes = {\n  show: PropTypes.bool,\n  text: PropTypes.string.isRequired\n};\n\nMessage.defaultProps = {\n  text: ''\n};\n\nexport default Message;\n","import React from 'react';\n\nimport './style/Button.scss'\n\nconst Button = ({type ='submit', size, alt='', content='', onClick}) => (\n        <button \n        onClick={onClick}\n        className={`mainButton ${size ? size : ''}`} type={type} alt={alt}>\n            {content}\n        </button>\n    )\n\nexport default Button;","import React from 'react';\n\n// Style\nimport \"./style/Status.scss\";\n\nexport default function Status({ status }) {\n  return <span className={`dot ${status}`}></span>;\n}\n","import React, { useCallback } from \"react\";\n\n// Component\nimport Button from \"./../../common/Button\";\nimport Status from \"./Status\";\n\n// Style\nimport \"./style/CharactersCard.scss\";\n\nconst CharacterCard = ({\n  character,\n  setCharacter\n}) => {\n  const { image, name, status, species } = character\n\nconst selectedCharacter = useCallback((e) => {\n  e.preventDefault()\n  setCharacter(character)\n\n}, [setCharacter, character])\n\n  return (\n    <div className=\"containerCard\">\n      <img className=\"containerCard-picture\" src={image} alt={character.name} />\n      <div className=\"containerCard-detail\">\n        <div className=\"containerCard-detail-name\">{name}</div>\n        <div className=\"containerCard-detail-status\">\n          <Status status={status}></Status>\n          <span className=\"containerCard-detail-status-text\">{status}</span>\n        </div>\n        <div className=\"containerCard-detail-species\">{species}</div>\n        <div className=\"containerCard-detail-button\">\n          <Button size=\"small\" content=\"Detalle\" type='none' onClick={selectedCharacter} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCharacterCard.defaultProps = {\n  character: {}\n};\n\nexport default CharacterCard\n","import React from \"react\";\n\n// Style\nimport \"./style/CharactersDetail.scss\";\n\nconst ProductDetail = ({ character }) => {\n  const { origin, location, name, image, episode, gender} = character\n\n  return (\n    <div className=\"containerDetail\">\n      {character && Object.keys(character).length > 0 && \n      <><div className=\"containerDetail-title\">Detalle</div><img\n        className=\"containerDetail-picture\"\n        src={image}\n        alt={name} /><div\n          className=\"containerDetail-name\"\n        > {character && character.name} </div><ul\n          className=\"containerDetail-list\"\n        >\n          <li>{gender}</li>\n          <li>{origin && origin.name}</li>\n          <li>{location && location.name}</li>\n          <li>Number of episodes: {episode && episode.length}</li>\n        </ul></>}\n    </div>\n  );\n};\n\nProductDetail.defaultProps = {\n  character: {},\n};\n\nexport default ProductDetail;\n","import React, { memo, useEffect, useState, useMemo } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { fetchCharactersNumber, fetchEpisode, fetchLocations } from '../../../redux/actions';\n\n// Redux\nimport {\n  getCharactersNumberSelector,\n  getLocationsSelector,\n  getEpisodesSelector\n\n} from \"../../../redux/selectors\";\n\n// Style\nimport \"./style/Numbers.scss\";\n\nconst Numbers = ({\n  charactersNumber,\n  locationsNumber,\n  episodesNumber,\n  fetchCharactersNumber,\n  fetchEpisode,\n  fetchLocations,\n}) => {\n  const [loading, setIsloading] = useState();\n  const abortController = useMemo(() => new window.AbortController(), []);\n\n  useEffect(() => {\n    const load = async () => {\n      setIsloading(true);\n      await Promise.all([\n        fetchCharactersNumber(\"\", abortController),\n        fetchLocations(\"\", abortController),\n        fetchEpisode(\"\", abortController),\n      ]);\n      await setIsloading(false);\n    };\n\n    load();\n  }, [abortController, fetchCharactersNumber, fetchEpisode, fetchLocations]);\n\n  useEffect(() => {}, [charactersNumber, locationsNumber, episodesNumber]);\n\n  const getCount = (data) => {\n    if (!data || !data.info) {\n      return \"\";\n    }\n\n    return data.info.count;\n  };\n  return (\n    <div className=\"containerNumbers\">\n      {!loading && (\n        <>\n          <div className=\"containerNumbers-text\">La serie en números:</div>\n          <div className=\"containerNumbers-text\">\n            {getCount(episodesNumber)} Número de episodios\n          </div>\n          <div className=\"containerNumbers-text\">\n            {getCount(locationsNumber)} Número de locations\n          </div>\n          <div className=\"containerNumbers-text\">\n            {getCount(charactersNumber)} Número de personajes\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nNumbers.defaultProps = {\n  charactersNumbe: {}, locationsNumber: {}, episodesNumber: {}\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    charactersNumber: getCharactersNumberSelector(state),\n    locationsNumber: getLocationsSelector(state),\n    episodesNumber: getEpisodesSelector(state),\n  }\n};\n\nexport default connect(mapStateToProps, { fetchCharactersNumber, fetchEpisode, fetchLocations })(memo(Numbers));\n","import React from \"react\";\n\n// Component\nimport Button from \"../../common/Button\";\n\n// Style\nimport \"./style/Pagination.scss\";\n\nexport default function Pagination({ page, pagination, setPage }) {\n\n  const isNext = () => {\n    return page === (pagination && pagination.pages)\n  }\n\n  const isPrev = () => {\n    return page === 1\n  }\n\n  return (\n    <div className=\"containerPagination\">\n      <Button\n        size={`${ isPrev() ? 'small_disable':'' }`}\n        content=\"Anterior\"\n        type=\"none\"\n        onClick={() => page > 1 && setPage(page - 1)}\n      />\n      <span className=\"containerPagination-page\">\n        {\" \"}\n        {page} de {pagination && pagination.pages}{\" \"}\n      </span>\n      <Button\n        size={`${  isNext() ? 'small_disable':'' }`}\n        content=\"Siguiente\"\n        type=\"none\"\n        onClick={() => !isNext() && setPage(page + 1)}\n      />\n    </div>\n  );\n}\n","import React, { memo, useEffect, useMemo, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\n// Redux\nimport {\n  getCharactersSelector,\n  getLoadingState\n} from \"../../../redux/selectors\";\n\n// Actions\nimport { fetchCharacters } from \"../../../redux/actions\";\nimport { loading } from \"../../../redux/actions\";\n\n// Component\nimport Message from \"../../common/message/message\";\nimport CharacterCard from \"./CharacterCard\"\nimport ProductDetail from \"./CharacterDetail\";\nimport Numbers from \"./Numbers\";\nimport Pagination from \"./Pagination\";\n\n// Style\nimport \"./style/Characters.scss\";\nimport Spinner from \"../../common/Spinner\";\n\n\nconst Charaters = ({\n  characters,\n  fetchCharacters,\n  loading,\n  location,\n  isLoading,\n}) => {\n  const searchQuery = new URLSearchParams(location.search).get(\"search\");\n  const abortController = useMemo(() => new window.AbortController(), []);\n  const [ characterList, setCharacterList] = useState(characters && characters.results)\n  const [ character, setCharacter ] = useState()\n  const [ message, setMessage ] = useState()\n  const [ pagination, setPagination ] = useState()\n  const [ page, setPage ] = useState(1)\n\n  useEffect(() => {\n    const load = async () => {\n      loading(true);\n      setPage(1)\n      await fetchCharacters(searchQuery, abortController, 1)\n      await loading(false);\n    };\n\n    load();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchQuery, fetchCharacters]);\n\n  useEffect(() => {\n    const load = async () => {\n      loading(true);\n      await fetchCharacters(searchQuery, abortController, page)\n      await loading(false);\n    };\n\n    load();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, fetchCharacters]);\n\n  useEffect(() => {\n    \n    if(characters && characters.results ) {\n      setCharacterList(characters.results)\n      setPagination(characters.info)\n    } else {\n      setCharacterList([])\n      setMessage(characters.message)\n    }\n    \n  }, [setCharacterList, characters]);\n\n  return (\n    <>\n    <Numbers />\n    <div className={`containerCharacters`}>\n      <div className={`listCharacters`}>\n      {!isLoading && characterList && characterList.length ? \n          characterList.map((item, index) => (\n            <CharacterCard\n              key={index}\n              setCharacter={setCharacter}\n              character={item}\n            />\n          ))\n        : \n          <Message show={!isLoading} text={message} />\n        }\n        <Pagination page={page} setPage={setPage} pagination={pagination} />\n      </div>\n      <ProductDetail character={character} />\n    </div>\n    </>\n  );\n};\n\nCharaters.defaultProps = {\n  characters: [],\n  isLoading: false,\n};\n\nconst mapStateToProps = (state) => ({\n  characters: getCharactersSelector(state),\n  isLoading: getLoadingState(state),\n});\n\nexport default connect(mapStateToProps, { loading, fetchCharacters })(memo(Charaters));\n","import React from 'react';\n\nimport './style/Input.scss'\n\nconst Input = ({reference='', defaultValue='', placeholder='', type=''}) =>  (\n        <input\n            className='inputText'\n            ref={reference}\n            defaultValue={defaultValue}\n            placeholder={placeholder}\n            type={type}\n        />\n    )\n\nexport default Input;","import React, {useRef, useEffect, useState, useCallback} from 'react';\nimport {withRouter} from 'react-router';\nimport { connect } from \"react-redux\";\nimport {\n    getLoadingState\n  } from \"../../../redux/selectors\";\n\nimport './style/SearchBar.scss';\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport Spinner from '../Spinner';\n\n\nconst SearchBar = (props) => {\n\n    const searchInput = useRef('');\n    const [searchInputValue, setSearchInputValue] = useState('');\n    let searchParam = new URLSearchParams(props.location.search).get(\"search\");\n\n    const handleSearchSubmit = useCallback( e => {\n        e.preventDefault();\n        const [searchInput] = e.target.children;\n        props.history.push({pathname: '/', search:`search=${searchInput.value}`, state:searchInput.value});\n    }, [props.history])\n\n    useEffect( () => {\n        setSearchInputValue(searchParam);\n        searchInput.current.focus()\n    }, [searchParam] );\n\n    return (\n                <form\n                  className=\"searchBarContainer\"\n                  onSubmit={handleSearchSubmit}\n                >\n                  <Input\n                    defaultValue={\n                      searchInputValue && searchInputValue !== \"\"\n                        ? searchInputValue\n                        : \"\"\n                    }\n                    reference={searchInput}\n                    placeholder=\"\"\n                    type=\"text\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    alt=\"Buscar\"\n                    content={\n                      props.isLoading ? (\n                        <Spinner size={20} />\n                      ) : (\n                        'Buscar'\n                      )\n                    }\n                  />\n                </form>\n    );\n};\n\n  \n  const mapStateToProps = (state) => ({\n    isLoading: getLoadingState(state),\n  });\n  \n  export default connect(mapStateToProps, {})(\n    withRouter(SearchBar)\n  );","import React from 'react';\n\n// Style\nimport \"./style/Header.scss\";\n\nexport default function Header() {\n  return <div className='container-header'></div>;\n}\n","import React from \"react\";\nimport SearchBar from \"../common/serchBar/SearchBar\";\nimport Header from \"./Header\";\n\n// Style\nimport \"./style/MainLayour.scss\";\n\nconst MainLayout = (props) => (\n  <div className=\"mainLayoutContainer\">\n    <Header />\n    <div className=\"content\">\n      <SearchBar />\n      <div className=\"children\">\n          {props.children}\n        </div>\n    </div>\n  </div>\n);\n\nexport default MainLayout;\n","import React, { memo } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Characters from \"../pages/character/Charaters\";\nimport MainLayout from \"./MainLayout\";\n\nconst Home = () => (\n    <BrowserRouter> \n      <MainLayout>\n        <Switch>\n          <Route exact path=\"/\" component={Characters} />\n        </Switch>\n      </MainLayout>\n    </BrowserRouter>\n);\n\nexport default memo(Home);\n"],"sourceRoot":""}